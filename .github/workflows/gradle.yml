# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Native Distributions

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      packageversion: ${{ steps.packageversion.outputs.packageversion }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: packageversion
        run: echo "::set-ouput name=packageversion::$(grep 'composeBuildVersion' gradle.properties | sed s/composeBuildVersion=//)"
      #- name: version
      #  run: echo "::set-ouput name=version::$(grep 'projectVersion' gradle.properties | sed s/projectVersion=//)"
  build-ubuntu:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: JDK Ubuntu
      uses: actions/setup-java@v2
      with:
        java-package: jdk+fx
        java-version: '17'
        distribution: 'zulu'
    - name: Gradle Ubuntu
      uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
      with:
        arguments: -PcomposeBuildOs=ubuntu packageDeb
    - run: echo "DEBNAME=terminodiff-${needs.setup.outputs.packageversion}.deb.zip" | tee -a $GITHUB_ENV
    - name: Upload DEB
      uses: actions/upload-artifact@v2.3.1
      with:
        name: ${{ env.DEBNAME }}
        path: build/compose/binaries/main/deb
  build-windows:
    needs: setup
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: JDK Windows
      uses: actions/setup-java@v2
      with:
        java-package: jdk+fx
        java-version: '17'
        distribution: 'zulu'
    - name: Gradle Windows
      uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
      with:
        arguments: -PcomposeBuildOs=windows packageExe
    - run: echo "EXENAME=terminodiff-${needs.setup.outputs.packageversion}.exe.zip" | tee -a $GITHUB_ENV
    - name: Upload EXE
      uses: actions/upload-artifact@v2.3.1
      with:
        name: ${{ env.EXENAME }}
        path: build/compose/binaries/main/exe
  build-mac:
    needs: setup
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: JDK macOS
      uses: actions/setup-java@v2
      with:
        java-package: jdk+fx
        java-version: '17'
        distribution: 'zulu'
    - name: Gradle Mac
      uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
      with:
        arguments: -PcomposeBuildOs=mac packageDmg
    - run: echo "DMGNAME=terminodiff-${needs.setup.outputs.packageversion}_intel.dmg.zip" | tee -a $GITHUB_ENV
    - name: Upload DMG
      uses: actions/upload-artifact@v2.3.1
      with:
        name: ${{ env.DMGNAME }}
        path: build/compose/binaries/main/dmg

